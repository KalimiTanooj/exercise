'''#1. How would you confirm that 2 strings have the same identity?

str1="ramu"
str2="raju"
if len(str1)==len(str2):
    print("2 strings have same identity")


OUTPUT:
2 strings have same identity

#---------------------------------------------------------------------------------------------

#2. How would you check if each word in a string begins with a capital letter?

str1="hello welcome to ojas"
d=str1.title()
print(d)

OUTPUT:

Hello Welcome To Ojas

#---------------------------------------------------------------------------------------------

#3. Check if a string contains a specific substrin


str1="hello welcome to ojas"
b="ojas"
if b in str1:
    print("substring is present")

OUTPUT:

substring is present

#---------------------------------------------------------------------------------------------

#4. Find the index of the first occurrence of a substring in a string


str1="hello welcome to ojas"
b=str1.find("ojas")
print(b)

OUTPUT:

17
#---------------------------------------------------------------------------------------------

#5. Count the total number of characters in a string


str1="hello welcome to ojas"
count=0
for i in str1:
    if str1:
        count=count+1
print("The number of characters in the string is = ",count)

OUTPUT:

The number of characters in the string is =  21

#---------------------------------------------------------------------------------------------
#6. Count the number of a specific character in a string


str1="hello welcome to ojas"
str2=str1.count("o")
print("The number of 'o' character present in the given string is = {}".format(str2))

OUTPUT:

The number of 'o' character present in the given string is = 4
#---------------------------------------------------------------------------------------------
#7. Capitalize the first character of a string

str1=input("enter character")
str2=str1.capitalize()
print("capitalized string is {}".format(str2))


OUTPUT:

enter charactertanooj
capitalized string is Tanooj

#---------------------------------------------------------------------------------------------

#8. What is an f-string and how do you use it?

Python f-strings, or formatted string literals, were introduced in Python 3.6. They’re called f-strings given that they are generated by placing an
“f” in front of the quotation marks. What makes f-strings special is that they contain expressions in curly braces which are evaluated at run-time,
allowing you large amounts of flexibility in how to use them!

What are Python f-strings:
    
Python f-strings (formatted string literals) were introduced in Python 3.6 via PEP 498. F-strings provide a means by which to embed expressions
inside strings using simple, straightforward syntax. Because of this, f-strings are constants, but rather expressions which are evaluated at runtime.

How to write Python f-strings:
    
You write Python f-strings by writing two parts: f (or F) and a string (either single, double, or triple quotes). So, an f-string can look like this:
example:
fstring = f'string'

Displaying variables with f-strings:
    
f-strings make it incredibly easy to insert variables into your strings. By prefacing your string with an f (or F), you can include variables by name
inside curly braces ({}).Let’s take a look at an example:
example:
    
age = 32
name = Nik
fstring = f'My name is {name} and I am {age} years old.'
print(fstring)
This returns:

OUTPUT:

My name is Nik and I am 32 years old.

What’s more, is that you can even act on different variables within f-strings, meaning you can go beyond the use of constants in your expressions.
Let’s take a look at another example:

height = 2
base = 3
fstring = f'The area of the triangle is {base*height/2}.'
print(fstring)
This returns:

OUTPUT:

The area of the triangle is 3

#---------------------------------------------------------------------------------------------

#9. Search a specific part of a string for a substring

str1="johny johny yes papa"
str2=str1.find("papa")
print(str2)

OUTPUT:

16

#---------------------------------------------------------------------------------------------

#10. Interpolate a variable into a string using format()

str1 = "Tanooj"
str2 = "ojas"
concatenated_str = "hi. my name is {} and i am working at {}".format(str1,str2)
print(concatenated_str)

OUTPUT:

hi. my name is Tanooj and i am working at ojas

str1 = "Tanooj"
str2 = "ojas"
concatenated_str = "hi. my name is {name} and i am working at {company}".format(name=str1,company=str2)
print(concatenated_str)

OUTPUT:

hi. my name is Tanooj and i am working at ojas

str1 = "Tanooj"
str2 = "ojas"
concatenated_str = f"hi. my name is {str1} and i am working at {str2}"
print(concatenated_str)

OUTPUT:

hi. my name is Tanooj and i am working at ojas

#---------------------------------------------------------------------------------------------

#11. Check if a string contains only numbers

str1="56"
result=0
result=str1.isnumeric()
print(result)

OUTPUT:

True
#---------------------------------------------------------------------------------------------

#12. Split a string on a specific character


str1="Inclusive growth is one of the core values of ojas"
text=str1[:9]
print(text)

OUTPUT:

Inclusive
#---------------------------------------------------------------------------------------------

#13. Check if a string is composed of all lower case characters


str1="Inclusive growth is one of the core values of ojas"
str2=""
for i in str1:
    str2=i.islower()
    if str2:
        print("True")
        break
if str2!=1:
    print("false")

OUTPUT:
   
True
#---------------------------------------------------------------------------------------------

#14. Check if the first character in a string is lowercase


str1="Inclusive growth is one of the core values of ojas"
for i in str1:
    if i==i.lower():
        print("yes, the first character in a string is lowercase")
        break

OUTPUT:

yes, the first character in a string is lowercase
#---------------------------------------------------------------------------------------------

#15. Can an integer be added to a string in Python?
# no an integer cannot be added to a string in python

#---------------------------------------------------------------------------------------------

#16. Reverse the string “hello world”

str1="hello world"
str2=str1[::-1]
print(str2)

OUTPUT:

dlrow olleh

#---------------------------------------------------------------------------------------------
#17. Join a list of strings into a single string, delimited by hyphens


str1="Inclusive growth is one of the core values of ojas"
str2=str1.split( )
print(str2)
str3='-'.join(str2)
print(str3)

OUTPUT:

['Inclusive', 'growth', 'is', 'one', 'of', 'the', 'core', 'values', 'of', 'ojas']
Inclusive-growth-is-one-of-the-core-values-of-ojas
#---------------------------------------------------------------------------------------------

#18. Check if all characters in a string conform to ASCII

a="A"
if a.isascii():
    print("True")
else:
    print("not an ascii character")

OUTPUT:

True
#---------------------------------------------------------------------------------------------

#19. Uppercase or lowercase an entire string

str1="inclusive growth is one of the core values of ojas"
capital=str1.upper()
print("upper case of string is --",capital)
lower_case=str1.lower()
print("lower case of string is --",lower_case)

OUTPUT:

upper case of string is -- INCLUSIVE GROWTH IS ONE OF THE CORE VALUES OF OJAS
lower case of string is -- inclusive growth is one of the core values of ojas

#---------------------------------------------------------------------------------------------

#20. Uppercase first and last character of a string

str1="tanooj"
a=str1[0].upper()
b=str1[1:-1]
c=str1[-1].upper()
print(a+b+c)

OUTPUT:

TanooJ
#---------------------------------------------------------------------------------------------

#21. Check if a string is all uppercase


str1="tanooj"
if str1.isupper():
    print("given string is upper case")
else:
    print("given string is lower case")

OUTPUT:

given string is lower case

#---------------------------------------------------------------------------------------------

#22. When would you use splitlines()?
#splitlines() splits a string on line breaks.

sentence = "hi \nmy name is tanooj\n working in ojas"
print(sentence.splitlines())

OUTPUT:

['hi ', 'my name is tanooj', ' working in ojas']

#---------------------------------------------------------------------------------------------

#23. Give an example of string slicing
#Slicing a string takes up to 3 arguments, string[start_index:end_index:step].

#step is the interval at which characters should be returned. So a step of 3 would return the character at every 3rd index.

str1='Hi my name is tanooj'
print(str1[:2]) 
print(str1[6:15]) 
print(str1[0:-1:2])
print(str1[1:7:2])
print(str1[::5])
print(str1[4::5])
print(str1[::-1])
print(str1[-5:-1])


output:

Hi
name is t
H ynm stno
im 
H  a
yetj
joonat si eman ym iH
anoo
#---------------------------------------------------------------------------------------------

#24. Convert an integer to a string


a=int(input("enter number"))
b=str(a)
print(type(b))

OUTPUT:

enter number5
<class 'str'>

#---------------------------------------------------------------------------------------------
#25. Check if a string contains only characters of the alphabet


n="tanooj1"
n2="tanooj"
a=n.isalpha()
b=n2.isalpha()
print(a)
print(b)

OUTPUT:

False
True
#---------------------------------------------------------------------------------------------

#26. Replace all instances of a substring in a string


str1="hi this is raju"
str2=str1.replace("raju","tanooj")
print(str2)

OUTPUT:

hi this is tanooj

#---------------------------------------------------------------------------------------------
#27. Return the minimum character in a string

str1="inclusive growth is one of the core values of ojas"
str2=min(str1)
print(str2)

#---------------------------------------------------------------------------------------------

#28. Check if all characters in a string are alphanumeric

str1="tanooj1"
str2=str1.isalnum()
print(str2)

OUTPUT:

True
#---------------------------------------------------------------------------------------------

#29 Remove whitespace from the left, right or both sides of a string

string = '  hi this is tanooj    '
print(string.lstrip()) #!!!! 'string of whitespace    ' !!!!!
print(string.rstrip()) #!!!! '  string of whitespace'   !!!!!
print(string.strip())  #!!!! 'string of whitespace'     !!!!!

OUTPUT:

hi this is tanooj    
  hi this is tanooj
hi this is tanooj
#---------------------------------------------------------------------------------------------

#30. Check if a string begins with or ends with a specific character?


n = 'kalimi sai tanooj'
a=n.startswith('kalimi') 
b=n.endswith('N')
print(a,b)

OUTPUT:

True False
'''
#---------------------------------------------------------------------------------------------